[{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Sean Davis Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"scdiagnostics-bioc2024-workshop","dir":"Articles","previous_headings":"","what":"ScDiagnostics BioC2024 Workshop","title":"ScDiagnostics BioC2024 Workshop","text":"Authors: Anthony Christidis2, Andrew Ghazi, Ludwig Geistlinger3.  Last modified: 22 July, 2024","code":""},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"description","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Overview","what":"Description","title":"ScDiagnostics BioC2024 Workshop","text":"scDiagnostics comprehensive toolkit designed analysis diagnostics single-cell RNA sequencing (scRNA-seq) data. package provides functionalities comparing principal components, visualizing canonical correlation analysis (CCA) outputs, plotting cell type-specific MDS PCA projections, among tasks.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"pre-requisites","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Overview","what":"Pre-requisites","title":"ScDiagnostics BioC2024 Workshop","text":"attending workshop, participants basic understanding single-cell RNA sequencing (scRNA-seq) data analysis familiarity Bioconductor packages. Specifically, knowledge SingleCellExperiment package useful working single-cell datasets. familiarity dimensionality reduction techniques, Principal Component Analysis (PCA), statistical tests enhance learning experience, required. solid foundation single-cell analysis techniques tools significantly benefit looking fully leverage capabilities specialized packages like scDiagnostics.” Basic proficiency R R Markdown also recommended follow along workshop exercises.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"setup-r-bioconductor","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop","what":"Setup (R / Bioconductor)","title":"ScDiagnostics BioC2024 Workshop","text":"First, let’s load necessary libraries data. use following datasets available scDiagnostics workshop. datasets processed versions dataset HeOrganAtlasData(tissue = c(\"Marrow\")) Bioconductor package scRNAseq. also create dataset extract one cell type (CD4) data. use SingleR annotation subset data. allow us evaluate well aligned CD4 cells reference query datasets.","code":"# Load necessary libraries library(scDiagnostics) library(scran) library(scater) # Load data data(\"reference_data\") data(\"query_data\") # Subset data for CD4 reference_data_subset <- reference_data[, which(reference_data$expert_annotation == \"CD4\")] query_data_subset <- query_data[, which(query_data$SingleR_annotation == \"CD4\")]  # Selecting highly variable genes ref_top_genes <- getTopHVGs(reference_data_subset, n = 500) query_top_genes <- getTopHVGs(query_data_subset, n = 500)  # Intersect the gene symbols to obtain common genes common_genes <- intersect(ref_top_genes, query_top_genes) reference_data_subset <- reference_data_subset[common_genes,] query_data_subset <- query_data_subset[common_genes,]  # Run PCA reference_data_subset <- runPCA(reference_data_subset) query_data_subset <- runPCA(query_data_subset)"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"time-outline","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Setup (R / Bioconductor)","what":"Time outline","title":"ScDiagnostics BioC2024 Workshop","text":"example 45-minute workshop:","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"learning-goals","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Setup (R / Bioconductor)","what":"Learning goals","title":"ScDiagnostics BioC2024 Workshop","text":"goal workshop provide participants thorough understanding scDiagnostics package, enabling effectively analyze interpret single-cell RNA sequencing data. Participants gain hands-experience utilizing package’s diverse functionalities enhance single-cell data analysis workflows. end workshop, participants understand capabilities applications scDiagnostics, master visualization techniques multiple single cell types, calculate correlations distances cell types, perform interpret statistical tests, detect visualize anomalies, evaluate data quality gene overlap, utilize additional analytical tools.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"learning-objectives","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Setup (R / Bioconductor)","what":"Learning objectives","title":"ScDiagnostics BioC2024 Workshop","text":"end workshop, participants able : Use various plotting functions compare query reference datasets across multiple single cell types. Utilize tools gene overlap measures. Implement functions calculate correlations distances different cell types. Apply statistical methods compare groups assess significance. Identify visualize anomalies single-cell data.","code":""},{"path":[]},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"plotcelltypepca","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Visualize Differences Between Datasets","what":"plotCellTypePCA","title":"ScDiagnostics BioC2024 Workshop","text":"function plots principal components different cell types query reference datasets.","code":"pc_plot <- plotCellTypePCA(query_data = query_data,                             reference_data = reference_data,                            cell_types = c(\"CD4\", \"CD8\", \"B_and_plasma\", \"Myeloid\"),                            query_cell_type_col = \"SingleR_annotation\",                             ref_cell_type_col = \"expert_annotation\",                             pc_subset = 1:3) pc_plot"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"boxplotpca","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Visualize Differences Between Datasets","what":"boxplotPCA","title":"ScDiagnostics BioC2024 Workshop","text":"function generates boxplot visualization principal components (PCs) different cell types across two datasets (query reference).","code":"pc_boxplot <- boxplotPCA(query_data = query_data,                           reference_data = reference_data,                          query_cell_type_col = \"SingleR_annotation\",                           ref_cell_type_col = \"expert_annotation\",                           cell_types = c(\"CD4\", \"CD8\", \"B_and_plasma\", \"Myeloid\"),                          pc_subset = 1:5) pc_boxplot"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"plotcelltypemds","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Visualize Differences Between Datasets","what":"plotCellTypeMDS","title":"ScDiagnostics BioC2024 Workshop","text":"function facilitates assessment similarity reference query datasets Multidimensional Scaling (MDS) scatter plots. allows visualization cell types based dissimilarity matrix computed user-selected gene set.","code":"mds_plot <- plotCellTypeMDS(query_data = query_data,                              reference_data = reference_data,                              cell_types = c(\"CD4\", \"CD8\", \"B_and_plasma\"),                             query_cell_type_col = \"SingleR_annotation\",                              ref_cell_type_col = \"expert_annotation\") mds_plot"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"comparepca","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Visualize Differences Between Datasets","what":"comparePCA","title":"ScDiagnostics BioC2024 Workshop","text":"function compares principal components (PCs) obtained separate PCA reference query datasets single cell type using either cosine similarity correlation. S3 plot method generates heatmap visualize cosine similarities principal components output comparePCA function.","code":"similarity_mat <- comparePCA(query_data = query_data_subset,                               reference_data = reference_data_subset,                               query_cell_type_col = \"SingleR_annotation\",                               ref_cell_type_col = \"expert_annotation\",                              pc_subset = 1:5) plot(similarity_mat)"},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"calculatevarimpoverlap","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Evaluate Gene Overlap","what":"calculateVarImpOverlap","title":"ScDiagnostics BioC2024 Workshop","text":"function uses Random Forest algorithm calculate importance genes differentiating cell types within reference dataset query dataset. function compares top genes identified datasets determine overlap importance scores.","code":"var_imp <- calculateVarImpOverlap(reference_data = reference_data,                                      query_data = query_data,                                      ref_cell_type_col = \"expert_annotation\",                                      query_cell_type_col = \"SingleR_annotation\") var_imp[[\"var_imp_comparison\"]] #>     B_and_plasma-CD8     B_and_plasma-CD4 B_and_plasma-Myeloid  #>                 0.80                 0.88                 0.34  #>              CD8-CD4          CD8-Myeloid          CD4-Myeloid  #>                 0.70                 0.24                 0.40"},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"calculateaveragepairwisecorrelation","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Calculate Correlations and Distances","what":"calculateAveragePairwiseCorrelation","title":"ScDiagnostics BioC2024 Workshop","text":"Computes average pairwise correlations specified cell types single-cell gene expression data. S3 plot method takes output calculateAveragePairwiseCorrelation function, matrix pairwise correlations, plots heatmap.","code":"cor_matrix_avg <- calculateAveragePairwiseCorrelation(query_data = query_data,                                                        reference_data = reference_data,                                                        query_cell_type_col = \"SingleR_annotation\",                                                        ref_cell_type_col = \"expert_annotation\",                                                        cell_types = c(\"CD4\", \"CD8\", \"B_and_plasma\"),                                                        pc_subset = 1:5,                                                       correlation_method = \"spearman\") plot(cor_matrix_avg)"},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"calculatenearestneighborprobabilities","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Perform Statistical Tests","what":"calculateNearestNeighborProbabilities","title":"ScDiagnostics BioC2024 Workshop","text":"function computes probabilities query cell belonging either reference query dataset cell type using nearest neighbor analysis. S3 plot method generates density plot showing distribution probabilities cell belonging either reference query dataset cell type.","code":"nn_output <- calculateNearestNeighborProbabilities(query_data = query_data,                                                     reference_data = reference_data,                                                    query_cell_type_col = \"SingleR_annotation\",                                                     ref_cell_type_col = \"expert_annotation\",                                                    pc_subset = 1:5) plot(nn_output)"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"calculatehotellingpvalue","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Perform Statistical Tests","what":"calculateHotellingPValue","title":"ScDiagnostics BioC2024 Workshop","text":"function calculates Hotelling’s T-squared statistic comparing multivariate means reference query datasets, projected onto subset principal components (PCs). performs permutation test obtain p-values cell type specified.","code":"p_values <- calculateHotellingPValue(query_data = query_data,                                       reference_data = reference_data,                                       query_cell_type_col = \"SingleR_annotation\",                                       ref_cell_type_col = \"expert_annotation\",                                      pc_subset = 1:5)  round(p_values, 5) #> B_and_plasma          CD8          CD4      Myeloid  #>        0.006        0.000        0.000        0.000"},{"path":[]},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"detectanomaly","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop > Brief Overview of scDiagnostics > Detect Anomalies","what":"detectAnomaly","title":"ScDiagnostics BioC2024 Workshop","text":"function projects query data onto PCA space reference data. isolation forest built reference data identify anomalies query data based PCA projections. query dataset provided user, anomaly scores computed reference data . Anomaly scores data combined cell types also provided part output. S3 plot method extracts specified PCs given anomaly detection object generates scatter plots pair PCs. uses ggplot2 create faceted plot facet represents pair PCs. Anomalies highlighted red, normal points shown black.","code":"anomaly_output <- detectAnomaly(reference_data = reference_data,                                  query_data = query_data,                                  ref_cell_type_col = \"expert_annotation\",                                  query_cell_type_col = \"SingleR_annotation\",                                 pc_subset = 1:5,                                 n_tree = 500,                                 anomaly_treshold = 0.6)  plot(anomaly_output,       cell_type = \"CD4\",       pc_subset = 1:5,       data_type = c(\"query\", \"reference\"))"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/articles/BioC2024_scDiagnostics_Workshop.html","id":"example-workflow","dir":"Articles","previous_headings":"ScDiagnostics BioC2024 Workshop","what":"Example Workflow","title":"ScDiagnostics BioC2024 Workshop","text":"First let us see well SingleR annotation performed can see according expert annotation, lot CD8 cells incorrectly labeled CD4 cells SingleR. Let’s identify cells (top 5 deviating cells CD4). First, compute distances query cell reference cell. Now, let’s compute top six anomalies CD4 using anomaly detection function. Next, plot densities distances anomalous cells CD4 CD8.   can also compute measures similarity cells cell types.","code":"table(Expert_Annotation = query_data$expert_annotation,        SingleR = query_data$SingleR_annotation) #>                  SingleR #> Expert_Annotation B_and_plasma CD4 CD8 Myeloid #>      B_and_plasma          136   0   0      10 #>      CD4                     0 190   1      13 #>      CD8                     0 134 196      29 #>      Myeloid                 0   0   0      40 distance_data <- calculateCellDistances(query_data = query_data,                                          reference_data = reference_data,                                          query_cell_type_col = \"SingleR_annotation\",                                          ref_cell_type_col = \"expert_annotation\",                                         pc_subset = 1:10) cd4_anomalies <- detectAnomaly(reference_data = reference_data,                                 query_data = query_data,                                 query_cell_type_col = \"SingleR_annotation\",                                 ref_cell_type_col = \"expert_annotation\",                                pc_subset = 1:10,                                n_tree = 500,                                anomaly_treshold = 0.5)$CD4 cd4_top6_anomalies <- names(sort(cd4_anomalies$query_anomaly_scores, decreasing = TRUE)[1:6]) plot(distance_data, ref_cell_type = \"CD4\", cell_names = cd4_top6_anomalies) plot(distance_data, ref_cell_type = \"CD8\", cell_names = cd4_top6_anomalies) overlap_measures <- calculateCellDistancesSimilarity(query_data = query_data,                                                       reference_data = reference_data,                                                       cell_names = cd4_top6_anomalies,                                                      query_cell_type_col = \"SingleR_annotation\",                                                       ref_cell_type_col = \"expert_annotation\",                                                      pc_subset = 1:10)  overlap_measures #> $bhattacharyya_coef #>                 Cell B_and_plasma       CD8       CD4    Myeloid #> 1 AAACGGGCACATGACT-1    0.1925182 0.7128711 0.2116577 0.07436962 #> 2 ATTGGTGGTAACGCGA-1    0.4236378 0.3799852 0.3830778 0.27169272 #> 3 ATTGGACCATACTACG-1    0.2097601 0.8765028 0.3656771 0.09452698 #> 4 CATTCGCTCGTCACGG-1    0.1363147 0.7006176 0.2448559 0.05778528 #> 5 CACCTTGGTTATGTGC-1    0.2452612 0.9885897 0.4514740 0.04147370 #> 6 TTGCGTCTCCACTCCA-1    0.2741303 0.9457587 0.5678963 0.12581074 #>  #> $hellinger_dist #>                 Cell B_and_plasma       CD8       CD4   Myeloid #> 1 AAACGGGCACATGACT-1    0.8985999 0.5358441 0.8878864 0.9620969 #> 2 ATTGGTGGTAACGCGA-1    0.7591853 0.7874102 0.7854439 0.8534092 #> 3 ATTGGACCATACTACG-1    0.8889544 0.3514217 0.7964439 0.9515635 #> 4 CATTCGCTCGTCACGG-1    0.9293467 0.5471585 0.8689903 0.9706775 #> 5 CACCTTGGTTATGTGC-1    0.8687570 0.1068190 0.7406254 0.9790436 #> 6 TTGCGTCTCCACTCCA-1    0.8519799 0.2328977 0.6573459 0.9349809"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony Christidis. Author, maintainer. Andrew Ghazi. Author. Smriti Chawla. Author. Nitesh Turaga. Contributor. Ludwig Geistlinger. Author. Robert Gentleman. Author.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Christidis , Ghazi , Chawla S, Geistlinger L, Gentleman R (2024). scDiagnosticsBioc2024Demo: Bioconductor Workshop scDiagnostics. R package version 2.0.1, https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/.","code":"@Manual{,   title = {scDiagnosticsBioc2024Demo: Bioconductor Workshop for scDiagnostics},   author = {Anthony Christidis and Andrew Ghazi and Smriti Chawla and Ludwig Geistlinger and Robert Gentleman},   year = {2024},   note = {R package version 2.0.1},   url = {https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/}, }"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"buildabiocworkshop","dir":"","previous_headings":"","what":"Bioconductor Workshop for scDiagnostics","title":"Bioconductor Workshop for scDiagnostics","text":"package template building Bioconductor workshop. package includes Github actions : Set bioconductor/bioconductor_docker:devel Github resources Install package dependencies package (based DESCRIPTION file) Run rcmdcheck::rcmdcheck Build pkgdown website push github pages Build docker image installed package dependencies deploy Github Container Repository name ghcr.io/gihub_user/repo_name, lowercase.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"responsibilities","dir":"","previous_headings":"","what":"Responsibilities","title":"Bioconductor Workshop for scDiagnostics","text":"Package authors primarily responsible : Creating landing site choosing workshops (website). website listed DESCRIPTION file URL. Creating docker image contain workshop materials installed packages necessary run materials. name resulting docker image, including “tag” desired, listed non-standard tag, DockerImage: DESCRIPTION file. tasks can accomplished using Github actions included template package. vignette accompanying package describes accomplish tasks.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Bioconductor Workshop for scDiagnostics","text":"detailed instructions, see build workshop article/vignette.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"results-of-successful-deployment","dir":"","previous_headings":"","what":"Results of successful deployment","title":"Bioconductor Workshop for scDiagnostics","text":"working docker image contains installed package dependencies. --date pkgdown website https://YOURUSERNAME.github.io/YOURREPOSITORYNAME/ Docker image tagged latest, sha-XXXXXX XXXXXX hash current master commit, master.","code":""},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"to-use-the-resulting-image","dir":"","previous_headings":"","what":"To use the resulting image:","title":"Bioconductor Workshop for scDiagnostics","text":"running, navigate http://localhost:8787/ login rstudio:yourchosenpassword. try repository docker image: NOTE: Running docker uses password plain text like exposes password others multi-user system (like shared workstation compute node). practice, consider using environment variable instead plain text pass along passwords secrets docker command lines.","code":"docker run -e PASSWORD=<choose_a_password_for_rstudio> -p 8787:8787 YOURDOCKERIMAGENAME docker run -e PASSWORD=abc -p 8787:8787 ghcr.io/bioconductor/buildabiocworkshop"},{"path":"https://AnthonyChristidis.github.io/scDiagnosticsBioc2024Demo/index.html","id":"whatcha-get","dir":"","previous_headings":"","what":"Whatcha get","title":"Bioconductor Workshop for scDiagnostics","text":"https://bioconductor.github.io/BuildABiocWorkshop Docker image can run locally, cloud, (usually) even singularity container HPC systems.","code":""}]
